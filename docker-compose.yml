version: "3.7"

services:
  proxy-server:
    build: 
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - 8080:80
    networks:
      - micro-net 
    depends_on:
      - server-api 
  mongo:
    image: mongo
    restart: always
    environment:
        MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
        MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    networks:
      - micro-net

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123456
    networks:
      - micro-net
    depends_on:
      - mongo
  client-api:
    restart: always
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: client-api
    volumes:
      - ./app/node_modules
      - ./client:/app
    depends_on:
      - server-api
    networks:
      - micro-net
  
  server-api:
    restart: always
    build:
      context: ./server
      dockerfile: Dockerfile
    volumes:
      - ./app/node_modules
      - ./server:/app
    ports:
      - 5000:5000
    environment:
      NODE_ENV: ${NODE_ENV}
      MONGO_URI: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb
    networks:
      - micro-net

volumes:
  mongodb-data:
    driver: local

networks:
  micro-net:
    driver: bridge


  

  
  
